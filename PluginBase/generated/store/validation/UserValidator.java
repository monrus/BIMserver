/**
 *
 * $Id$
 */
package store.validation;

import java.util.Date;

import org.bimserver.models.log.UserRelated;

import org.eclipse.emf.common.util.EList;

import store.ExtendedData;
import store.ExtendedDataSchema;
import store.OAuthAuthorizationCode;
import store.ObjectState;
import store.Project;
import store.Service;
import store.User;
import store.UserSettings;
import store.UserType;

/**
 * A sample validator interface for {@link store.User}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface UserValidator {
	boolean validate();

	boolean validateName(String value);

	boolean validatePasswordHash(byte[] value);

	boolean validatePasswordSalt(byte[] value);

	boolean validateHasRightsOn(EList<Project> value);

	boolean validateState(ObjectState value);

	boolean validateCreatedOn(Date value);

	boolean validateCreatedBy(User value);

	boolean validateUserType(UserType value);

	boolean validateUsername(String value);

	boolean validateLastSeen(Date value);

	boolean validateToken(String value);

	boolean validateValidationToken(byte[] value);

	boolean validateValidationTokenCreated(Date value);

	boolean validateUserSettings(UserSettings value);

	boolean validateSchemas(EList<ExtendedDataSchema> value);

	boolean validateExtendedData(EList<ExtendedData> value);

	boolean validateServices(EList<Service> value);

	boolean validateLogs(EList<UserRelated> value);

	boolean validateOAuthAuthorizationCodes(EList<OAuthAuthorizationCode> value);

	boolean validateOAuthIssuedAuthorizationCodes(EList<OAuthAuthorizationCode> value);
}
