/**
 *
 * $Id$
 */
package store.validation;

import org.eclipse.emf.common.util.EList;

import store.PluginDescriptor;
import store.SmtpProtocol;
import store.WebModulePluginConfiguration;

/**
 * A sample validator interface for {@link store.ServerSettings}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ServerSettingsValidator {
	boolean validate();

	boolean validateSendConfirmationEmailAfterRegistration(boolean value);

	boolean validateAllowSelfRegistration(Boolean value);

	boolean validateAllowUsersToCreateTopLevelProjects(boolean value);

	boolean validateCheckinMergingEnabled(Boolean value);

	boolean validateSmtpServer(String value);

	boolean validateEmailSenderAddress(String value);

	boolean validateEmailSenderName(String value);

	boolean validateSiteAddress(String value);

	boolean validateGenerateGeometryOnCheckin(boolean value);

	boolean validateAllowOnlyWhitelisted(boolean value);

	boolean validateWhitelistedDomains(EList<String> value);

	boolean validateHideUserListForNonAdmin(Boolean value);

	boolean validateProtocolBuffersPort(Integer value);

	boolean validateCacheOutputFiles(Boolean value);

	boolean validateWebModules(EList<WebModulePluginConfiguration> value);

	boolean validateWebModule(WebModulePluginConfiguration value);

	boolean validateServiceRepositoryUrl(String value);

	boolean validateSendEmailOnNewRevision(boolean value);

	boolean validateSessionTimeOutSeconds(int value);

	boolean validateSmtpUsername(String value);

	boolean validateSmtpPassword(String value);

	boolean validateSmtpPort(int value);

	boolean validateSmtpProtocol(SmtpProtocol value);

	boolean validateReuseGeometry(boolean value);

	boolean validateAllowCreateValidatedUser(boolean value);

	boolean validateRenderEngineProcesses(int value);

	boolean validatePluginStrictVersionChecking(boolean value);

	boolean validateName(String value);

	boolean validateDescription(String value);

	boolean validateIcon(String value);

	boolean validateStoreLastLogin(boolean value);

	boolean validateStoreServiceRuns(boolean value);

	boolean validateOptimizeMappedItems(boolean value);

	boolean validateDefaultRenderEnginePlugin(PluginDescriptor value);
}
