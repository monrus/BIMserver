/**
 *
 * $Id$
 */
package store.validation;

import org.bimserver.models.log.AccessMethod;

import org.eclipse.emf.common.util.EList;

import store.ExtendedDataSchema;
import store.InternalServicePluginConfiguration;
import store.ModelCheckerInstance;
import store.Project;
import store.Trigger;
import store.User;

/**
 * A sample validator interface for {@link store.Service}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface ServiceValidator {
	boolean validate();

	boolean validateName(String value);

	boolean validateServiceName(String value);

	boolean validateServiceIdentifier(String value);

	boolean validateProviderName(String value);

	boolean validateUrl(String value);

	boolean validateToken(String value);

	boolean validateNotificationProtocol(AccessMethod value);

	boolean validateDescription(String value);

	boolean validateTrigger(Trigger value);

	boolean validateReadRevision(boolean value);

	boolean validateReadExtendedData(ExtendedDataSchema value);

	boolean validateWriteRevision(Project value);

	boolean validateWriteExtendedData(ExtendedDataSchema value);

	boolean validateProfileIdentifier(String value);

	boolean validateProfileName(String value);

	boolean validateProfileDescription(String value);

	boolean validateProfilePublic(boolean value);

	boolean validateProject(Project value);

	boolean validateUser(User value);

	boolean validateInternalService(InternalServicePluginConfiguration value);

	boolean validateModelCheckers(EList<ModelCheckerInstance> value);
}
