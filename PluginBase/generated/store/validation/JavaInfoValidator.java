/**
 *
 * $Id$
 */
package store.validation;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link store.JavaInfo}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface JavaInfoValidator {
	boolean validate();

	boolean validateHeapTotal(long value);

	boolean validateHeapUsed(long value);

	boolean validateHeapFree(long value);

	boolean validateHeapMax(long value);

	boolean validateThreads(int value);

	boolean validateJavaHome(String value);

	boolean validateJavaVersion(String value);

	boolean validateJavaVendor(String value);

	boolean validateJavaVendorurl(String value);

	boolean validateJavavmVersion(String value);

	boolean validateJavavmVendor(String value);

	boolean validateJavavmName(String value);

	boolean validateJavaspecVersion(String value);

	boolean validateJavaspecVendor(String value);

	boolean validateJavaspecName(String value);

	boolean validateJavaClassVersion(String value);

	boolean validateJavaClasspath(EList<String> value);

	boolean validateJavaLibrarypath(EList<String> value);

	boolean validateJavaIoTmp(String value);

	boolean validateJavaExtdir(String value);

	boolean validateJavaFileSeparator(String value);

	boolean validateJavaPathSeparator(String value);

	boolean validateJavaLineSeparator(String value);
}
