/**
 *
 * $Id$
 */
package org.bimserver.models.ifc4x3.validation;

import org.bimserver.models.ifc4x3.IfcRelAdheresToElement;
import org.bimserver.models.ifc4x3.IfcRelConnectsElements;
import org.bimserver.models.ifc4x3.IfcRelConnectsWithRealizingElements;
import org.bimserver.models.ifc4x3.IfcRelContainedInSpatialStructure;
import org.bimserver.models.ifc4x3.IfcRelCoversBldgElements;
import org.bimserver.models.ifc4x3.IfcRelFillsElement;
import org.bimserver.models.ifc4x3.IfcRelInterferesElements;
import org.bimserver.models.ifc4x3.IfcRelProjectsElement;
import org.bimserver.models.ifc4x3.IfcRelSpaceBoundary;
import org.bimserver.models.ifc4x3.IfcRelVoidsElement;

import org.eclipse.emf.common.util.EList;

/**
 * A sample validator interface for {@link org.bimserver.models.ifc4x3.IfcElement}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface IfcElementValidator {
	boolean validate();

	boolean validateTag(String value);

	boolean validateFillsVoids(EList<IfcRelFillsElement> value);

	boolean validateConnectedTo(EList<IfcRelConnectsElements> value);

	boolean validateIsInterferedByElements(EList<IfcRelInterferesElements> value);

	boolean validateInterferesElements(EList<IfcRelInterferesElements> value);

	boolean validateHasProjections(EList<IfcRelProjectsElement> value);

	boolean validateHasOpenings(EList<IfcRelVoidsElement> value);

	boolean validateIsConnectionRealization(EList<IfcRelConnectsWithRealizingElements> value);

	boolean validateProvidesBoundaries(EList<IfcRelSpaceBoundary> value);

	boolean validateConnectedFrom(EList<IfcRelConnectsElements> value);

	boolean validateContainedInStructure(EList<IfcRelContainedInSpatialStructure> value);

	boolean validateHasCoverings(EList<IfcRelCoversBldgElements> value);

	boolean validateHasSurfaceFeatures(EList<IfcRelAdheresToElement> value);
}
